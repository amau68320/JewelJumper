layout(local_size_x = 16, local_size_y = 16) in;
layout(r32ui, binding = 0) uniform readonly  uimage3D u_Src;
layout(r32ui, binding = 1) uniform writeonly uimage3D u_Dst;
layout(location = 2) uniform ivec2 u_SrcSz;
layout(location = 3) uniform ivec2 u_DstSz;

uint fetchMeTheGoat(in ivec3 coord)
{
    if(coord.x >= u_SrcSz.x || coord.y >= u_SrcSz.y)
        return 0;
    else
        return imageLoad(u_Src, coord).r;
}

void main()
{
    ivec2 iID = ivec2(gl_GlobalInvocationID.xy);

    if(iID.x < u_DstSz.x && iID.y < u_DstSz.y) {
        for(int z = 0; z < 64; z++) {
            ivec3 pos = ivec3(iID * 2, z);
            uint val = 0;

            val += fetchMeTheGoat(pos + ivec3(0, 0, 0));
            val += fetchMeTheGoat(pos + ivec3(0, 1, 0));
            val += fetchMeTheGoat(pos + ivec3(1, 0, 0));
            val += fetchMeTheGoat(pos + ivec3(1, 1, 0));

            imageStore(u_Dst, ivec3(iID, z), uvec4(val));
        }
    }
}
